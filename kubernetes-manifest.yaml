---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger
spec:
  selector:
    matchLabels:
      app: jaeger
  template:
    metadata:
      labels:
        app: jaeger
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      containers:
      - name: jaeger
        image: jaegertracing/all-in-one:1.31
        ports:
        - containerPort: 5775 # accept zipkin.thrift over compact thrift protocol
        - containerPort: 5778 # serve configs
        - containerPort: 6831 # accept jaeger.thrift over compact thrift protocol
        - containerPort: 6832 # accept jaeger.thrift over binary thrift protocol
        - containerPort: 9411 # Zipkin compatible endpoint
        - containerPort: 14250 # accept model.proto
        - containerPort: 14268 # accept jaeger.thrift directly from clients
        - containerPort: 14269 # admin port: health check at / and metrics at /metrics
        - containerPort: 16685 # Protobuf/gRPC QueryService
        - containerPort: 16686 # serve frontend
        env:
        - name: COLLECTOR_ZIPKIN_HOST_PORT
          value: ":9411"
        resources:
          requests:
            cpu: 200m
            memory: 180Mi
          limits:
            cpu: 300m
            memory: 300Mi
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger
spec:
  type: ClusterIP
  selector:
    app: jaeger
  ports:
  - name: "5775"
    port: 5775
    targetPort: 5775
    protocol: UDP
  - name: "5778"
    port: 5778
    targetPort: 5778
  - name: "6831"
    port: 6831
    targetPort: 6831
    protocol: UDP
  - name: "6832"
    port: 6832
    targetPort: 6832
    protocol: UDP
  - name: "9411"
    port: 9411
    targetPort: 9411
  - name: "14250"
    port: 14250
    targetPort: 14250
  - name: "14268"
    port: 14268
    targetPort: 14268
  - name: "14269"
    port: 14269
    targetPort: 14269
  - name: "16685"
    port: 16685
    targetPort: 16685
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-frontend
spec:
  type: LoadBalancer
  selector:
    app: jaeger
  ports:
  - name: "16686"
    port: 16686
    targetPort: 16686
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otelcollector
spec:
  selector:
    matchLabels:
      app: otelcollector
  template:
    metadata:
      labels:
        app: otelcollector
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      containers:
      - name: otelcollector
        image: europe-north1-docker.pkg.dev/ti-dictionary/transparency-information-dictionary/tid-demonstrator-otelcollector:latest
        ports:
        - containerPort: 1888 # pprof extension
        - containerPort: 4317 # OTLP gRPC receiver
        - containerPort: 8888
        - containerPort: 8889
        - containerPort: 13133 # health_check extension
        - containerPort: 55670 # zpages extension: http://localhost:55679/debug/servicez
        resources:
          requests:
            cpu: 200m
            memory: 180Mi
          limits:
            cpu: 300m
            memory: 300Mi
---
apiVersion: v1
kind: Service
metadata:
  name: otelcollector
spec:
  type: ClusterIP
  selector:
    app: otelcollector
  ports:
  - name: "1888"
    port: 1888
    targetPort: 1888
  - name: "4317"
    port: 4317
    targetPort: 4317
  - name: "8888"
    port: 8888
    targetPort: 8888
  - name: "8889"
    port: 8889
    targetPort: 8889
  - name: "13133"
    port: 13133
    targetPort: 13133
  - name: "55670"
    port: 55670
    targetPort: 55670
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      serviceAccountName: default
      containers:
        - name: server
          image: europe-north1-docker.pkg.dev/ti-dictionary/transparency-information-dictionary/tid-demonstrator-frontend:latest
          ports:
          - containerPort: 5000
          readinessProbe:
            initialDelaySeconds: 10
            httpGet:
              path: /healthz/ready
              port: 5000
          livenessProbe:
            initialDelaySeconds: 10
            httpGet:
              path: /healthz/live
              port: 5000
          env:
          - name: FRONTEND_PORT
            value: "5000"
          - name: ACCOUNT_SERVICE_HOST
            value: "accountservice"
          - name: ACCOUNT_SERVICE_PORT
            value: "6000"
          - name: COURIER_SERVICE_HOST
            value: "courierservice"
          - name: COURIER_SERVICE_PORT
            value: "7000"
          - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
            value: "http://otelcollector:4317"
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: "service.name=frontend,service.version=1.0.0"
          # # ENV_PLATFORM: One of: local, gcp, aws, azure, onprem, alibaba
          # # When not set, defaults to "local" unless running in GKE, otherwies auto-sets to gcp
          # - name: ENV_PLATFORM
          #   value: "aws"
          # - name: CYMBAL_BRANDING
          #   value: "true"
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  type: ClusterIP
  selector:
    app: frontend
  ports:
  - name: http
    port: 80
    targetPort: 5000
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-external
spec:
  type: LoadBalancer
  selector:
    app: frontend
  ports:
  - name: http
    port: 80
    targetPort: 5000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: accountservice
spec:
  selector:
    matchLabels:
      app: accountservice
  template:
    metadata:
      labels:
        app: accountservice
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      containers:
      - name: server
        image: europe-north1-docker.pkg.dev/ti-dictionary/transparency-information-dictionary/tid-demonstrator-accountservice:latest
        ports:
        - containerPort: 6000
        env:
        - name: ACCOUNT_SERVICE_PORT
          value: "6000"
        - name: EMAIL_SERVICE_HOST
          value: "emailservice"
        - name: EMAIL_SERVICE_PORT
          value: "8000"
        - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
          value: "http://otelcollector:4317"
        - name: OTEL_RESOURCE_ATTRIBUTES
          value: "service.name=accountservice,service.version=1.0.0"
        readinessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:6000"]
        livenessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:6000"]
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: accountservice
spec:
  type: ClusterIP
  selector:
    app: accountservice
  ports:
  - name: grpc
    port: 6000
    targetPort: 6000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: courierservice
spec:
  selector:
    matchLabels:
      app: courierservice
  template:
    metadata:
      labels:
        app: courierservice
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      containers:
      - name: server
        image: europe-north1-docker.pkg.dev/ti-dictionary/transparency-information-dictionary/tid-demonstrator-courierservice:latest
        ports:
        - containerPort: 7000
        env:
        - name: COURIER_SERVICE_PORT
          value: "7000"
        - name: ACCOUNT_SERVICE_HOST
          value: "accountservice"
        - name: ACCOUNT_SERVICE_PORT
          value: "6000"
        - name: EMAIL_SERVICE_HOST
          value: "emailservice"
        - name: EMAIL_SERVICE_PORT
          value: "8000"
        - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
          value: "http://otelcollector:4317"
        - name: OTEL_RESOURCE_ATTRIBUTES
          value: "service.name=courierservice,service.version=1.0.0"
        readinessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:7000"]
        livenessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:7000"]
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: courierservice
spec:
  type: ClusterIP
  selector:
    app: courierservice
  ports:
  - name: grpc
    port: 7000
    targetPort: 7000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: emailservice
spec:
  selector:
    matchLabels:
      app: emailservice
  template:
    metadata:
      labels:
        app: emailservice
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      containers:
      - name: server
        image: europe-north1-docker.pkg.dev/ti-dictionary/transparency-information-dictionary/tid-demonstrator-emailservice:latest
        ports:
        - containerPort: 8000
        env:
        - name: EMAIL_SERVICE_PORT
          value: "8000"
        - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
          value: "http://otelcollector:4317"
        - name: OTEL_RESOURCE_ATTRIBUTES
          value: "service.name=emailservice,service.version=1.0.0"
        readinessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:8000"]
        livenessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:8000"]
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: emailservice
spec:
  type: ClusterIP
  selector:
    app: emailservice
  ports:
  - name: grpc
    port: 8000
    targetPort: 8000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tidservice
spec:
  selector:
    matchLabels:
      app: tidservice
  template:
    metadata:
      labels:
        app: tidservice
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      containers:
      - name: server
        image: europe-north1-docker.pkg.dev/ti-dictionary/transparency-information-dictionary/tid-service:latest
        ports:
        - containerPort: 9000
        env:
        - name: TID_SERVICE_PORT
          value: "9000"
        - name: JAEGER_HOST
          value: "jaeger"
        - name: JAEGER_QUERY_PORT
          value: "16685"
        - name: TI_DICTIONARY_NAME
          value: "TransparencyInformationDictionary.json"
        readinessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:9000"]
        livenessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:9000"]
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: tidservice
spec:
  type: ClusterIP
  selector:
    app: tidservice
  ports:
  - name: grpc
    port: 9000
    targetPort: 9000
